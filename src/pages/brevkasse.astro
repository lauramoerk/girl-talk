---
import GirlsUniLayout from "../layouts/GirlsUniLayout.astro";
import ColorSection from "../components/ui/ColorSection.astro";
import Button from "../components/ui/Button.astro";
import BrevkasseCard from "../components/cards/BrevkasseCard.astro";
import SearchBar from "../components/ui/SearchBar.astro";
import Dropdown from "../components/ui/Dropdown.astro";
import UnderlinedHeader from "../components/ui/UnderlinedHeader.astro";
const supabaseUrl = 'https://vrnvjrlmumgaywbxvaqv.supabase.co/rest/v1/brevkasse-girls'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZybnZqcmxtdW1nYXl3Ynh2YXF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODUzODcwNDIsImV4cCI6MjAwMDk2MzA0Mn0.zWbD-YJqJP0ZuJDFHvhqG6JoxRoqVR79RP2mTmp71BQ'
const res = await fetch(supabaseUrl, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          apikey: supabaseKey,
          Authorization: `Bearer ${supabaseKey}`,
          Prefer: 'return=representation'
        }
      });
    const data = await res.json();

---

<GirlsUniLayout title="Brevkasse">
  <div class="brevkasselayout">
    <ColorSection color="pink" hex="#ffe4ee" title="GirlTalk's brevkasse" text="Skriv et brev" link="https://jpmpz0xim6i.typeform.com/to/pFHo1ZT6" size="m-extra-small-d-medium">
      <div slot="description" class="text-in-component">
      <p slot="description" class="themeheader">Har du nogle tanker, du har brug for at få ud af hovedet, så de fylder mindre?</p>
      <p slot="description">Del dem med os her eller læs andre pigers spørgsmål, følelser og oplevelser.</p>
    </div>
    </ColorSection>
    <UnderlinedHeader header="Læs andre pigers tanker" class="subheader" />

    <div>
      <p class="light-text searchcopy">Søg efter breve</p>
      <SearchBar />
    </div>
    <div class="dropdowncontainer">
      <Dropdown />
    </div>
    <p class="indicator">{data.length} af {data.length}</p>
    <div class="lettercontainer">
{data.map((letter) => 
<BrevkasseCard category={letter.category} filter={letter.category.toLowerCase().replace(/\s/g, "_")} header={letter.title} href="/specificletter" />)}
    </div>
    <div class="margintop"><Button text="Læs flere"></Button></div>
  </div>
</GirlsUniLayout>

<script>

  const filterButtons = document.querySelectorAll("a.color");
  const cardsSection = document.querySelectorAll(".BrevkasseCard");
  const dropdownOptions = document.querySelectorAll("select")


  const buttonsArray = [...filterButtons];
  const filteredArray = [...cardsSection];
  const optionsArray = [...dropdownOptions]

  optionsArray.forEach((button) => {
    button.addEventListener("change", () => {

      if (filteredArray.length) {
        filteredArray.forEach((filteredElement) => {
          if (filteredElement.classList.contains("none")) {
            filteredElement.classList.remove("none");
          }
        });
      }

      filteredArray.forEach((filteredElement) => {
        
        if (button.value === "alle") {
          filteredArray.forEach((filteredElement) => {
          if (filteredElement.classList.contains("none")) {
            filteredElement.classList.remove("none");
          }
        })
        } else {
        if (!filteredElement.classList.contains(button.value)) {
          filteredElement.classList.add("none");
        }
      }
      });
    });
  });

  buttonsArray.forEach((button) => {
    button.addEventListener("click", () => {
      if (buttonsArray.length) {
        buttonsArray.forEach((button) => {
          button.classList.remove("selected");
        });
      }

      if (filteredArray.length) {
        filteredArray.forEach((filteredElement) => {
          if (filteredElement.classList.contains("none")) {
            filteredElement.classList.remove("none");
          }
        });
      }

      button.classList.toggle("selected");

      filteredArray.forEach((filteredElement) => {
        
        if (button.textContent.toLowerCase() === "alle") {
          filteredArray.forEach((filteredElement) => {
          if (filteredElement.classList.contains("none")) {
            filteredElement.classList.remove("none");
          }
        })
        } else {
        if (!filteredElement.classList.contains(button.textContent.toLowerCase().replace(/\s/g, "_"))) {
          filteredElement.classList.add("none");
        }
      }
      });
    });
  });






  

</script>

<style>

  .none {
    display: none;
  }
  .dropdowncontainer {
    width: 263px;
  }
  .searchcopy {
    color: var(--color-black-ish);
    opacity: var(--opacity-75);
  }
  .indicator {
    color: var(--color-black-ish);
    opacity: var(--opacity-50);
    margin-bottom: var(--spacing-small);
    margin-top: var(--spacing-small);
  }
  .lettercontainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--spacing-small);
    max-width: 1150px;
  }

  .brevkasselayout {
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-top: var(--spacing-small);
    margin-bottom: var(--spacing-small);
  }

  .margintop {
    margin-top: var(--spacing-small);
  }

  @media only screen and (min-width: 600px) {
    .text-in-component {
      max-width: 65%;
    }
    .indicator {
      margin-bottom: var(--spacing-xl);
      margin-top: var(--spacing-xl);
    }
    .dropdowncontainer {
      width: 100%;
    }

    /* .searchcontainer {
      height: 100px;
      width: 100%;
     
    } */
  }
</style>
