---
import Button from "./Button.astro";
const { color, hex, title } = Astro.props;
const { link, text, size = "large" } = Astro.props;
---


  <section class='ColorSection'>
    <div class="flex-container">
    <section class="headline">
        <h1 class="primary-header">{title}</h1>
        <slot name="subheader"></slot>
      </section>
      <div class:list={[ 'color-background', color]}>
        <svg width="8" height="8" viewBox="0 0 75 75" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect width="75" height="75" fill="#F5F5F5"></rect>
          <rect x="-75" y="-75" width="150" height="150" fill={hex}></rect>
          <circle r="75" fill="#FBFBFB"></circle>
        </svg>
      </div>
    </div>
    <section class:list={[ 'description', color]}>
      <section class="description-container">
      <slot name="description"></slot>
    </section>
    <div class="button-wrapper">
    <Button {link} {text} {size}/>
  </div>
    </section>
   
  </div>

</section>

<style> 



/* COLOR SECTION */
.ColorSection {
  margin-top: var(--spacing-2xl);
  margin-bottom: var(--spacing-2xl);
}
  .flex-container {
    display: flex;
    width: 90vw;
  }

  h1 {
    padding: 5px;
  }

  .color-background {
    position: relative;
    //flex-grow: 1;
    width: 100%;
    height: auto;
    border-radius: 8px 8px 0 0;
  }

  svg {
    content: "";
    position: absolute;
    background-color: transparent;
    bottom: 0;
    left: -8px;
  }
  .description-container {
    padding: var(--spacing-medium);
  }

  .description {
    width: 90vw;
    border-radius: 8px 0 8px 8px;
  }




  @media only screen and (min-width: 600px) {
    .flex-container {
    display: flex;
    width: 75vw;
  }

  .description {
    width: 75vw;
  }
}


  </style>


